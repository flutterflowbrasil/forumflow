// Script de teste para verificar conex√£o com Supabase
const SUPABASE_URL = 'https://pvwvhdnpwiaydsysruba.supabase.co';
const SUPABASE_ANON_KEY = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InB2d3ZoZG5wd2lheWRzeXNydWJhIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NjA3MDE3NzksImV4cCI6MjA3NjI3Nzc3OX0.5tDnLSao8MOgr0SK6aiE6-eKq6Xh7cFqS7ySk0NE6zM';

console.log('üîç Testando conex√£o com Supabase...\n');

// Teste 1: Verificar se a URL est√° acess√≠vel
fetch(SUPABASE_URL)
  .then(response => {
    console.log('‚úÖ Supabase URL est√° acess√≠vel');
    console.log('   Status:', response.status);
    console.log('   URL:', SUPABASE_URL);
  })
  .catch(error => {
    console.error('‚ùå Erro ao acessar Supabase URL:');
    console.error('   ', error.message);
  });

// Teste 2: Verificar endpoint de autentica√ß√£o
fetch(`${SUPABASE_URL}/auth/v1/health`, {
  headers: {
    'apikey': SUPABASE_ANON_KEY
  }
})
  .then(response => response.json())
  .then(data => {
    console.log('\n‚úÖ Endpoint de autentica√ß√£o est√° respondendo:');
    console.log('   ', JSON.stringify(data, null, 2));
  })
  .catch(error => {
    console.error('\n‚ùå Erro no endpoint de autentica√ß√£o:');
    console.error('   ', error.message);
  });

// Teste 3: Verificar se consegue fazer uma requisi√ß√£o REST
setTimeout(() => {
  fetch(`${SUPABASE_URL}/rest/v1/`, {
    headers: {
      'apikey': SUPABASE_ANON_KEY,
      'Content-Type': 'application/json'
    }
  })
    .then(response => {
      console.log('\n‚úÖ Endpoint REST est√° respondendo');
      console.log('   Status:', response.status);
    })
    .catch(error => {
      console.error('\n‚ùå Erro no endpoint REST:');
      console.error('   ', error.message);
    });
}, 1000);
